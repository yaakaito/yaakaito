# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  issues:
    types:
      - closed
      - deleted
      - edited
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    working-directory: web

jobs:
  # Build job
  build:
    # Specify runner +  build & upload the static files as an artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - run: bun install
      - run: bun ./scripts/notes-from-issue.ts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: bun ./scripts/register-articles.ts
        env:
          ARTICLES_API_KEY: ${{ secrets.ARTICLES_API_KEY }}
      - run: cd ../mcp-server && bun install && bun scripts/generate-articles.ts && cd ../web
      - run: bun run build
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: web/dist
      - name: Deploy MCP server
        run: cd ../mcp-server && bun run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      - name: Purge related articles cache
        env:
          ARTICLES_API_KEY: ${{ secrets.ARTICLES_API_KEY }}
        run: |
          # 登録された記事のIDを収集してキャッシュをパージ
          ARTICLE_IDS=$(bun run -e "
            import fs from 'fs/promises';
            import path from 'path';
            
            async function findMarkdownFiles(dir) {
              const files = [];
              const entries = await fs.readdir(dir, { withFileTypes: true });
              for (const entry of entries) {
                const fullPath = path.join(dir, entry.name);
                if (entry.isDirectory()) {
                  files.push(...await findMarkdownFiles(fullPath));
                } else if (entry.isFile() && entry.name.endsWith('.md')) {
                  files.push(fullPath);
                }
              }
              return files;
            }
            
            async function main() {
              const ids = [];
              
              // blog記事のID
              const blogFiles = await findMarkdownFiles('src/pages/blog');
              for (const file of blogFiles) {
                const relativePath = path.relative('src/pages/blog', file);
                const fileName = path.basename(relativePath, '.md');
                ids.push('blog-' + fileName);
              }
              
              // note記事のID
              const noteFiles = await findMarkdownFiles('src/pages/note');
              for (const file of noteFiles) {
                if (!file.endsWith('index.md')) {
                  const fileName = path.basename(file, '.md');
                  ids.push('note-' + fileName);
                }
              }
              
              console.log(JSON.stringify(ids));
            }
            
            main();
          ")
          
          # キャッシュパージAPIを呼び出し
          curl -X POST https://articles.yaakai.to/purge_cache \
            -H "X-API-Key: $ARTICLES_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"articleIds\": $ARTICLE_IDS}"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
