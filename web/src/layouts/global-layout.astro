---
import icon from "../../../icon/icon-128.png";
import ThemeSwitcher from '../components/ThemeSwitcher.astro';

interface Props {
    title?: string;
    description?: string;
    ogImage?: string;
    ogType?: string;
    ogUrl?: string;
    twitterCard?: string;
    twitterCreator?: string;
}

const {
    title,
    description = "技術的なメモとブログ記事のコレクション",
    ogImage = icon.src,
    ogType = "website",
    ogUrl,
    twitterCard = "summary_large_image",
    twitterCreator = "@yaakaito"
} = Astro.props;

const siteTitle = title ? `${title} - yaakai.to` : 'yaakai.to';
const canonicalUrl = ogUrl || Astro.url.href;
const fullImageUrl = ogImage.startsWith('http') ? ogImage : new URL(ogImage, Astro.site || Astro.url.origin).href;
---

<html lang="ja">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href={icon.src} />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={ogType} />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={fullImageUrl} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="yaakai.to" />

    <!-- Twitter -->
    <meta name="twitter:card" content={twitterCard} />
    <meta name="twitter:site" content="@yaakaito" />
    <meta name="twitter:creator" content={twitterCreator} />
    <meta name="twitter:url" content={canonicalUrl} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={fullImageUrl} />
    <meta name="twitter:image:alt" content={`${siteTitle}のイメージ画像`} />

    <title>{siteTitle}</title>
    <script is:inline>
        (function() {
            const savedTheme = localStorage.getItem('theme');

            if (savedTheme === 'light' || savedTheme === 'dark') {
                document.documentElement.setAttribute('data-theme', savedTheme);
            }
        })();
    </script>
    <link rel="stylesheet" href="https://unpkg.com/@acab/reset.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&display=swap" rel="stylesheet">
    <script src="https://kit.fontawesome.com/57385c1b35.js" crossorigin="anonymous"></script>
    <style is:global>
        :root {
            color-scheme: light dark;

            /* グレースケールパレット - ライトモード */
            --gray-100: #FFFFFF;
            --gray-200: #F9F9F9;
            --gray-300: #F0F0F0;
            --gray-400: #E0E0E0;
            --gray-500: #C0C0C0;
            --gray-600: #808080;
            --gray-700: #505050;
            --gray-800: #303030;
            --gray-900: #121212;

            /* アクセントカラー - 赤色系 */
            --red-500: #E53935;
            --red-600: #D32F2F;
            --red-700: #C62828;

            /* 機能的な色の割り当て */
            --bg-color-level-0: light-dark(var(--gray-100), var(--gray-800));
            --bg-color-level-1: light-dark(var(--gray-200), #303030);
            --bg-color-level-2: light-dark(var(--gray-300), #404040);
            --bg-color-level-3: light-dark(var(--gray-400), #505050);
            --bg-color-level-4: light-dark(var(--gray-500), #606060);

            --text-color-level-0: light-dark(var(--gray-900), #FFFFFF);
            --text-color-level-1: light-dark(var(--gray-800), #E0E0E0);
            --text-color-level-2: light-dark(var(--gray-700), #BDBDBD);

            --primary-color-level-0: light-dark(var(--red-600), #F44336);
            --primary-color-level-1: light-dark(var(--red-500), #EF5350);
            --primary-color-level-2: light-dark(var(--red-700), #E53935);

            /* コンテンツタイプ識別色 */
            --blog-color: light-dark(var(--red-600), #FF5252);
            --note-color: light-dark(var(--gray-600), #A0A0A0);
        }

        [data-theme="dark"] {
            color-scheme: dark;
        }

        [data-theme="light"] {
            color-scheme: light;
        }
        body {
            margin: 0;
            padding: 0;
            font-family: Helvetica Neue,Arial,Hiragino Sans,Hiragino Kaku Gothic ProN,BIZ UDPGothic,Meiryo,-apple-system,sans-serif, Apple Color Emoji, Segoe UI Emoji;
            -webkit-font-smoothing: antialiased;
            font-size: 12pt;
            line-height: 31px;
            font-feature-settings: "palt";
            background-color: var(--bg-color-level-0);
            color: var( --text-color-level-0);
            /* overflow-x: hidden; */
        }
        a {
            color: var(--primary-color-level-0);
            text-decoration: none;
        }

        a:hover {
            color: var(--primary-color-level-1);
        }

        a:visited {
            color: var(--primary-color-level-2);
        }
    </style>
    <style>
        .header {
            width: 100%;
            padding: 16px 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
        }

        .site-nav {
            display: flex;
            gap: 24px;
        }

        .nav-link {
            font-weight: bold;
            color: var(--text-color-level-1);
            text-decoration: none;
            padding: 8px 0;
            position: relative;
            transition: color 0.2s ease;
        }

        .nav-link:hover {
            color: var(--primary-color-level-0);
        }

        .nav-link::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background-color: var(--primary-color-level-0);
            transition: width 0.3s ease;
        }

        .nav-link:hover::after {
            width: 100%;
        }

        .container {
            position: relative;
            max-width: 1200px;
            margin: 0 auto;
            z-index: 1;
            padding: 0 24px 48px 24px;
        }

        @media (max-width: 768px) {
            .container {
                padding: 0 16px 32px 16px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <slot />
    </div>
</body>
</html>
