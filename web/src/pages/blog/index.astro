---
import GlobalLayout from "../../layouts/global-layout.astro";
import BlogCard from "../../components/BlogCard.astro";
import type { MarkdownInstance } from "astro";

// 投稿の型定義
interface Post {
  frontmatter: {
    title: string;
    date: string;
    emoji: string;
    eyecatch?: string;
  };
  url: string;
}

// ディレクトリ内の全ての .md ファイルを取得
const blogPosts = await Astro.glob<{ title: string; date: string; emoji: string; eyecatch?: string }>('./**/*.md');

// ファイルを読み込む非同期関数
function loadPosts(posts: MarkdownInstance<{ title: string; date: string; emoji: string; eyecatch?: string }>[]): Post[] {
  return posts.map(post => ({
    frontmatter: post.frontmatter,
    url: post.url ?? '',
  })).sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime());
}

const blogs = loadPosts(blogPosts);
---
<GlobalLayout title="Blog - yaakai.to">
  <div class="blog-container">
    <header class="blog-header">
      <h1 class="blog-title">Blog</h1>
      <p class="blog-description">技術的な記事やプロジェクトの解説など</p>
    </header>

    <div class="blog-grid">
      {blogs.map(post => (
        <BlogCard
          title={post.frontmatter.title}
          date={post.frontmatter.date}
          emoji={post.frontmatter.emoji}
          url={post.url}
          eyecatch={post.frontmatter.eyecatch}
        />
      ))}
    </div>
  </div>
</GlobalLayout>

<style>
  .blog-container {
    padding: 32px 0;
  }

  .blog-header {
    margin-bottom: 32px;
    padding-bottom: 16px;
    border-bottom: 2px solid var(--bg-color-level-3);
  }

  .blog-title {
    font-size: 2em;
    font-weight: bold;
    margin: 0 0 8px 0;
    color: var(--text-color-level-0);
    position: relative;
    padding-left: 16px;
  }

  .blog-title::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 6px;
    background-color: var(--blog-color);
    border-radius: 3px;
  }

  .blog-description {
    color: var(--text-color-level-2);
    margin: 0;
    font-size: 1.1em;
  }

  .blog-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 24px;
  }

  @media (max-width: 1023px) {
    .blog-grid {
      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
      gap: 20px;
    }
  }

  @media (max-width: 768px) {
    .blog-container {
      padding: 24px 0;
    }

    .blog-grid {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 16px;
    }

    .blog-title {
      font-size: 1.8em;
    }
  }

  @media (max-width: 480px) {
    .blog-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
