---
import GlobalLayout from "../../layouts/global-layout.astro";
import type { MarkdownInstance } from "astro";

// ディレクトリ内の全ての .md ファイルを取得
const notePosts = await Astro.glob<{ title: string; date: string; emoji: string }>('./**/*.md');

// ファイルを読み込む非同期関数
function loadPosts(posts: MarkdownInstance<{ title: string; date: string; emoji: string }>[]) {
  return posts.map(post => ({
    frontmatter: post.frontmatter,
    url: post.url,
  })).sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime());
}

const notes = loadPosts(notePosts);
---
<GlobalLayout>
    <style>
        .container {
            max-width: 800px;
            margin: 32px auto;
            padding: 32px;
            border-radius: 16px;
            background-color: var(--bg-color-level-1);
        }

        .posts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 16px;
        }

        .post-tile {
            padding: 16px;
            border-radius: 8px;
            background-color: var(--bg-color-level-2);
            text-align: center;
        }

        .post-emoji {
            font-size: 2em;
        }

        .post-title {
            font-size: 1.2em;
            margin: 8px 0;
        }

        .post-date {
            font-size: 0.9em;
            color: var(--text-color-level-2);
        }
    </style>
    <div class="container">
        <h1>All Notes</h1>
        <div class="posts-grid">
            {notes.map(post => (
                <div class="post-tile">
                    <div class="post-emoji">{post.frontmatter.emoji}</div>
                    <div class="post-title"><a href={post.url}>{post.frontmatter.title}</a></div>
                    <div class="post-date">{new Date(post.frontmatter.date).toLocaleDateString()}</div>
                </div>
            ))}
        </div>
    </div>
</GlobalLayout>
