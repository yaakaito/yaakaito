---
import { getGenericEyecatchColor } from '../utils/eyecatch';

interface Props {
  title: string;
  date: string;
  emoji: string;
  url: string;
  eyecatch?: string;
  isMain?: boolean;
}

const { title, date, emoji, url, eyecatch, isMain = false } = Astro.props;
const formattedDate = new Date(date).toLocaleDateString('ja-JP', {
  year: 'numeric',
  month: '2-digit',
  day: '2-digit'
}).replace(/\//g, '/');

// 相対日付を計算する関数
function getRelativeDate(dateString: string): string {
  const date = new Date(dateString);
  const now = new Date();
  const diffTime = Math.abs(now.getTime() - date.getTime());
  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));

  if (diffDays === 0) {
    return "今日";
  } else if (diffDays === 1) {
    return "昨日";
  } else if (diffDays < 7) {
    return `${diffDays}日前`;
  } else if (diffDays < 30) {
    return `${Math.floor(diffDays / 7)}週間前`;
  } else if (diffDays < 365) {
    return `${Math.floor(diffDays / 30)}ヶ月前`;
  } else {
    return `${Math.floor(diffDays / 365)}年前`;
  }
}

const relativeDate = getRelativeDate(date);

// 汎用アイキャッチ画像の色を取得
const genericEyecatchColor = getGenericEyecatchColor(url);
---

<a href={url} class="feature-card-link">
  <div class={`feature-card ${isMain ? 'main-feature' : 'sub-feature'}`}>
    <div class="feature-indicator"></div>

    {isMain ? (
      <div class="feature-content">
        <div class="feature-image-container-main">
          {eyecatch ? (
            <img
              src={`https://articles.yaakai.to/eyecatch?id=${eyecatch}`}
              alt={title}
              class="feature-eyecatch-main"
            />
          ) : (
            <div
              class="feature-emoji-container-main"
              style={`background-image: url('https://articles.yaakai.to/common/${genericEyecatchColor}.png'); background-size: cover; background-position: center;`}
            >
              <div class="feature-emoji-main">{emoji}</div>
            </div>
          )}
        </div>

        <h3 class="feature-title">{title}</h3>
        <div class="feature-meta">
          <span class="feature-emoji-inline">{emoji}</span>
          <span class="feature-date">{formattedDate}</span>
        </div>
      </div>
    ) : (
      <div class="feature-sub-layout">
        <div class="feature-image-container-sub">
          {eyecatch ? (
            <img
              src={`https://articles.yaakai.to/eyecatch?id=${eyecatch}`}
              alt={title}
              class="feature-eyecatch-sub"
            />
          ) : (
            <div
              class="feature-emoji-container-sub"
              style={`background-image: url('https://articles.yaakai.to/common/${genericEyecatchColor}.png'); background-size: cover; background-position: center;`}
            >
              <div class="feature-emoji-sub">{emoji}</div>
            </div>
          )}
        </div>

        <div class="feature-content-sub">
          <h3 class="feature-title">{title}</h3>
          <div class="feature-meta">
            <span class="feature-emoji-inline">{emoji}</span>
            <span class="feature-date">{formattedDate}</span>
          </div>
        </div>
      </div>
    )}
  </div>
</a>

<style>
  .feature-card-link {
    display: block;
    text-decoration: none;
    color: inherit;
    height: 100%;
  }

  .feature-card {
    position: relative;
    background-color: var(--bg-color-level-1);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: light-dark(0 4px 8px rgba(0, 0, 0, 0.08), 0 4px 8px rgba(0, 0, 0, 0.3));
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .feature-card-link:hover .feature-card {
    transform: translateY(-6px);
    box-shadow: light-dark(0 8px 16px rgba(0, 0, 0, 0.12), 0 8px 16px rgba(0, 0, 0, 0.4));
  }

  .feature-indicator {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 6px;
    background-color: var(--blog-color);
    z-index: 1;
  }

  /* サブカード（右側）用の横型レイアウト */
  .feature-sub-layout {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 12px;
    height: 100%;
  }

  .feature-image-container-sub {
    flex: 0 0 35%;
    margin-right: 12px;
  }

  .feature-eyecatch-sub {
    width: 100%;
    aspect-ratio: 16 / 9;
    object-fit: cover;
    border-radius: 6px;
  }

  .feature-emoji-container-sub {
    width: 100%;
    aspect-ratio: 16 / 9;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--bg-color-level-2);
    border-radius: 6px;
  }

  .feature-emoji-sub {
    font-size: 3em;
  }

  .feature-content-sub {
    flex: 1;
    min-width: 0;
  }

  .feature-content {
    padding: 20px 20px 20px 26px;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .feature-title {
    font-size: 1.5em;
    font-weight: bold;
    margin: 0 0 12px 0;
    line-height: 1.3;
    color: var(--text-color-level-0);
    text-decoration: none;
  }

  .feature-card-link:hover .feature-title {
    color: var(--primary-color-level-0);
  }

  .feature-meta {
    display: flex;
    align-items: center;
    margin-top: auto;
  }

  .feature-emoji-inline {
    margin-right: 8px;
  }

  .feature-date {
    font-size: 0.9em;
    color: var(--text-color-level-2);
    text-align: left;
  }


    /* メインフィーチャー縦並びレイアウト */
    .main-feature .feature-content {
      padding: 16px;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      height: 100%;
    }

    .feature-image-container-main {
      width: 100%;
      margin-bottom: 16px;
    }

    .feature-eyecatch-main {
      width: 100%;
      aspect-ratio: 16 / 9;
      object-fit: cover;
      border-radius: 8px;
    }

    .feature-emoji-container-main {
      width: 100%;
      aspect-ratio: 16 / 9;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: var(--bg-color-level-2);
      border-radius: 8px;
    }

    .feature-emoji-main {
      font-size: 5em;
    }

    /* メインフィーチャー用のスタイル調整 */
    .main-feature .feature-title {
      font-size: 1.8em;
    }

    .main-feature .feature-emoji {
      font-size: 5em;
    }

  /* サブフィーチャー用のスタイル調整 */
  .sub-feature {
    box-shadow: light-dark(0 2px 4px rgba(0, 0, 0, 0.05), 0 2px 4px rgba(0, 0, 0, 0.2));
  }

  .sub-feature .feature-indicator {
    width: 4px;
  }

  .sub-feature .feature-content {
    padding: 16px 16px 16px 20px;
  }

  .sub-feature .feature-title {
    font-size: 1em;
    margin: 0 0 8px 0;
  }


  @media (max-width: 768px) {
    .main-feature .feature-title,
    .feature-title {
      font-size: 1.4em;
    }

    .feature-content {
      padding: 16px 16px 16px 22px;
    }

    /* モバイル表示の調整 */
    .main-feature .feature-content {
      padding: 16px;
    }

    .feature-image-container-main {
      margin-bottom: 16px;
    }

    .feature-eyecatch-main {
      aspect-ratio: 16 / 9;
    }

    .feature-emoji-container-main {
      aspect-ratio: 16 / 9;
    }

    .feature-emoji-main {
      font-size: 4em;
    }

    /* サブカードのモバイル対応 */
    .feature-sub-layout {
      padding: 12px;
    }

    .feature-image-container-sub {
      flex: 0 0 35%;
      margin-right: 12px;
    }
  }
</style>
